{
    "name": "distributed-lock",
    "$schema": "../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "packages/distributed-lock/src",
    "projectType": "library",
    "targets": {
        "build": {
            "executor": "@nx/js:tsc",
            "outputs": ["{options.outputPath}"],
            "options": {
                "outputPath": "dist/packages/distributed-lock",
                "tsConfig": "packages/distributed-lock/tsconfig.lib.json",
                "packageJson": "packages/distributed-lock/package.json",
                "main": "packages/distributed-lock/src/index.ts",
                "assets": ["packages/distributed-lock/*.md"],
                "generateExportsField": true
            }
        },
        "publish": {
            "command": "node tools/scripts/publish.mjs advisory-lock {args.ver} {args.tag}",
            "dependsOn": ["build"]
        },
        "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": ["{options.outputFile}"]
        },
        "test": {
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "options": {
                "reportsDirectory": "../../coverage/packages/distributed-lock"
            }
        },
        "generate-readme": {
            "executor": "@trellisorg/nx-ai-readme:ai-readme",
            "options": {
                "include": ["apps/api/src/app/**/*.ts"],
                "instructions": "Write a README.md file in Markdown that clearly explains how to use the library @trellisorg/distributed-lock. Provide sections for: installation, setup, configuration options, usage and all other relevant information a developer would need to use the library, An example structure/layout will be provided along with all source files and relevant example files for the project. This library to meant for doing distributed locks using Redis to ensure that resources are not operated on at the same time in a distributed system. Clearly show examples of how to use the library for both simple standalone typescript setups as well as NestJS examples. Be sure to show examples of different configuration options and what the options are for configs,"
            }
        }
    },
    "tags": []
}
